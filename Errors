********
****
1.Unable to start embedded container; nested exception is org.springframework.context.ApplicationContextException: Unable to start EmbeddedWebApplicationContext due to missing EmbeddedServletContainerFactory bean.
**** V-1.0
主要可能是依赖导致SpringBoot没有使用内置Tomcat容器，但是又找不到容器启动因为没有配置。
当然解决办法可能优先将IDEA清除缓存并重启试试看，可能是工具的问题。不行的话可能需要按照网上方法检查jar包，进行更新。
**** V-2.0
原因大概是找到了，上面的原因可能是直接原因导致的项目无法启动。根本原因可能是由于IDEA使用了全局setting，因此导入项目之后使用的repository库是同一个库，当maven自动依赖jar包后可能会导致本地仓库jar包冲突。
解决办法：重新创建一个repository目录，修改导入项目的maven配置，更新maven依赖。
**** V-3.0
又遇到这个问题，在试过现有的解决办法之后，仍然无法解决。原因不明，待更新。
********
********
****
2.org.apache.poi.poifs.filesystem.OfficeXmlFileException: The supplied data appears to be in the Office 2007+ XML. You are calling the part of POI that deals with OLE2 Office Documents. You need to call a different part of POI to process this data (eg XSSF instead of HSSF)
****
该错误意思是说，文件中的数据是用Office2007+XML保存的，而现在却调用OLE2 Office文档处理，应该使用POI不同的部分来处理这些数据，比如使用XSSF来代替HSSF。
具体解决办法可能是，尝试在本地手动重建xlsx和xls类型的文件，将数据复制进去，然后手动复制到项目资源路径下。再重新部署项目。
********
********
****
3.（兆尹-导出之类的功能时）java.lang.NullPointerException/java.lang.ArrayIndexOutOfBoundsException
****
除去相关配置未做完全的情况，可能是有时直接复制一些文件到项目的resource路径下，无论怎么锤都不会被编译到target编译目录下，导致项目运行报异常，只能手动复制。
**** V-1.0
首先确认conf、Controller、Service、tpl中都做了相应且正确的修改，然后检查target输出目录，查看resource目录下的资源文件是否一致存在。若不存在则手动复制过去，可以做对应的修改。
**** V-2.0
对于conf下的export_conf.xml中的filePath与tpl中配置，如果在tpl中直接写文件名，则需要将对应文件直接放在tpl目录下最外层。如果为了更好区分，建立了一些tpl的对应子目录，将资源文件放在tpl的多级子目录下，则在filePath中要做对应的修改，但目前还未尝试过，直接放在tpl下的最外层是没问题的。
**** V-3.0
在项目中发现新问题，提示"业务逻辑异常，无数据"。经过debug排查发现在"com.joyintech.framework.export"包下的"CommonExportService"类中，在执行到"selecPageData"方法中的：
    "com.joyintech.framework.grid.Page<T> p = selectPageData(selectParam);"
时，调用了当前类的"selectPageData()"方法，方法本身没有问题，返回null。问题出在不该调用这个"selectPageData()"方法。
解决办法：在继承了"CommonExportService"的service类中，也就是Controller里导出功能调用的service里重写"selectPageData()"方法:
    public Page<EtrProjectDto> selectPageData(Map<String, Object> selectParam) {return selectForPage(selectParam);}
[注]:此处调用了子类Service的重写方法，是因为在Controller方法中，调用的: 
    return etrProjectService.export(this.getPageId(),RequestUtil.getParameters(getRequest()));
因此当前的"this"指的是方法调用者"etrProjectService"。无论执行到哪一个类的哪一个方法，只要无具体调用（如上面的"RequestUtil.getParameters(getRequest())",进入这一步方法后，"this"指向的就是"RequestUtil"了），"this"指向的都应该是最外层源头方法的调用对象。
因此在此处，不加"this"调用的也是"etrProjectService"重写的"selectPageData()"方法。如果"etrProjectService"中没有重写方法，才会调用父类"CommonExportService"中的方法。导致返回null异常。
********
********
****
4.java.sql.SQLException: 无效的列类型: 1111
****
Mybatis什么时候使用jdbcType：当Mybatis不能自动识别你传入对象的类型时。Mybatis什么时候不能自动识别传染的对象类型：当你传入空值的时候。
解决办法：给所有的传入参数加上jdbcType，总之：加上没有损害。【注：数据库中number类型的对应的jdbcType是numeric】
********
********
****
5.java.lang.NoClassDefFoundError
****
根本原因是因为Java虚拟机在编译时能找到合适的类，而在运行时不能找到合适的类导致的错误。例如在运行时我们想调用某个类的方法或者访问这个类的静态成员的时候，发现这个类不可用，此时Java虚拟机就会抛出NoClassDefFoundError错误。
与ClassNotFoundException的不同在于，这个错误发生只在运行时需要加载对应的类不成功，而不是编译时发生。简单总结就是，NoClassDefFoundError发生在编译时对应的类可用，而运行时在Java的classpath路径中，对应的类不可用导致的错误。
解决办法：直接原因有很多种，暂时未找到根本的解决办法。但是有一个直接的办法：在项目里手动新建一个Java类，把引用包里出错的类内容复制过去，然后将引用原来类改为引用新建类。
********
********
****
6.项目启动之后，通过localhost、127.0.0.1都可以访问，但是通过ip地址访问不了；也就是内网其他用户进行远程访问不了，被拒绝。
****
根本原因是Tomcat容器自动绑定IPV6的地址，导致无法访问。
解决办法：如果是SpringBoot项目的话，使用内置Tomcat，在yml配置文件中，在server下，增加"address: 0.0.0.0"，重启项目；
其他项目的话，在对应Tomcat下的server.xml文件中，修改connector配置, 端口不用改, 加上'address="0.0.0.0"', 使其绑定到IPv4，重启项目。
********
********
****
7.java.lang.IllegalStateException: Logback configuration error detected
****
根据网上来说具体原因有很多种，自己遇到的情况是JRebel启动报错，但是普通debug启动正常。
解决办法：对于这一情况来说，重新激活JRebel就可以解决。以后如果遇到其他情况再更新。
********
********
